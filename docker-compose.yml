services:
  web:
    # Сборка на основе Dockerfile
    build: .
    # Перед запуском приложения выполняются миграции БД
    command: sh -c 'alembic upgrade head && fastapi run main.py --port 8080 --workers 4'
#    command: sh -c 'fastapi run main.py --port 8080 --workers 4'
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    env_file: ".env"
    # Контейнеры приложения и СУБД будут в одной сети
    networks:
      - fastapi-short_url-network
    # Контейнер приложения запускается после проверки работоспособности СУБД
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres:12.5
    # Проверка работоспособности СУБД
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    # Том для сохранения данных после завершения работы контейнера
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - fastapi-short_url-network

networks:
      fastapi-short_url-network:
        driver: bridge

volumes:
  postgres_data:
